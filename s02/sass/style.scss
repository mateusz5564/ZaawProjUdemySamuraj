@import "variables";
@import "reset";
@import "base";
@import "header";


.text {
  font-size: 20px;
  div {
    .red {
      color:red;
    }
    &.red {
      color: red;
    }
  }
}

//@MIXIN

//ex1
@mixin text {
  font-family: serif;
  color: red;
  font-size: 20px;
  line-height: 1.5;
}

.article {
  text-align: justify;
  @include text;
}

//ex2
@mixin position($type, $top, $right, $bottom, $left) {
  position: $type;
  top: $top;
  right: $right;
  bottom: $bottom;
  left: $left;
}

.modal {
  background-color: rgba(0, 0, 0, 0.5);
  @include position(absolute, auto, 10px, 10px, auto);
}

//ex3 

@mixin margin($vertical: 20px, $horizontal: 40px) {
  margin: $vertical $horizontal;
}

div {
  @include margin(20px);
}


//ex4

@mixin title($font-size: 2rem, $color: red) {
  font-size: $font-size;
  color: $color;
}

div {
  @include title($color: blue);
}

//ex5

@mixin title2($font-size: 2rem) {
  font-size: $font-size;
  @content;
}

h2 {
  @include title2(1.5rem) {
    line-height: 2;
    color: yellow;
  }
}


//@EXTEND

//ex1

.text {
  font-size: 20px;
  font-family: Arial, "Helvetica Neue", Helvetica, sans-serif;
  color: darkblue;
}

.article__text {
  @extend .text;
}

.footer__copyright {
  @extend .text;
  font-size: 22px;
}


//ex2

%flex-list {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  justify-content: center;
  align-items: center;
}

ul {
  @extend %flex-list;
  list-style: none;
}

.news {
  border: 1px solid black;
  flex-direction: column;
  @extend %flex-list;
}


//CALCULATIONS

//ex1

$page-margin: 20px;
$margin-increase: 2;

.menu__item {
  margin: $page-margin + 20px/2 * $margin-increase;
}

//INTERPOLATION

//ex1 

$class-font-small: sm;

p.#{$class-font-small} {
  font-size: 10px;
}


//COLORS

//ex1

p {
  color: mix(green,yellow)
}


//FUNCTIONS

//ex1

$border-width: 5px;

@function double-border() {
  @return $border-width * 2;
}

div {
  border: double-border() solid red;
}

//ex2

@function border-multiplication($multiplier: null, $width: $border-width){
  @if($multiplier == null) {
    @return $width;
  }
  @else if($multiplier == 0) {
    @return 0;
  }
  @else if(type-of($multiplier) == number and type-of($width) == number and $multiplier > 0) {
    @return ($width * $multiplier);
  }
  @else {
    @return null;
  }
}

div.test {
  border: border-multiplication(2, 8px) solid red;
}


// MEDIA QUERIES

//ex1

$breakpoints: (
  small: (min-width: 320px),
  medium: (min-width: 720px),
  large: (min-width: 1024px),
);

@mixin mq($breakpoint) {
  $size: map-get($breakpoints, $breakpoint);
  @if($size) {
    @media #{$size} {
      @content;
    }
  }
  @else {
    @error '"#{$breakpoint}" - doesnt exist'
  }
};


div.mqr {
  @include mq(medium) {
    font-size: 30px;
  }
}